name: 👀 Check for new n8n stable releases

on:
  schedule:
    - cron: '0 8 * * *' # Every day at 8am
  workflow_dispatch:

jobs:
  check:
    runs-on: ubuntu-latest

    timeout-minutes: 5

    permissions:
      contents: write

    steps:
      - name: 👀 Get the latest custom image stable release
        id: custom_image_release
        uses: pozetroninc/github-action-get-latest-release@v0.7.0
        with:
          repository: CodelyTV/n8n-codely-custom-image
          excludes: prerelease,draft
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: 🆕 Get the latest n8n stable release
        id: n8n_release
        uses: pozetroninc/github-action-get-latest-release@v0.7.0
        with:
          repository: n8n-io/n8n
          excludes: prerelease,draft
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: 🤲 Compare n8n release versions
        id: compare_releases
        run: |
          echo "👀 Latest Codely custom image release: ${{ steps.custom_image_release.outputs.release }}"
          echo "🆕 Latest n8n release: ${{ steps.n8n_release.outputs.release }}"

          if [ "${{ steps.custom_image_release.outputs.release }}" != "${{ steps.n8n_release.outputs.release }}" ]; then
            echo "release_changed=true" >> $GITHUB_OUTPUT
            echo "🤩 New release detected! Releasing new custom image version in 1, 2…"
          else
            echo "release_changed=false" >> $GITHUB_OUTPUT
            echo "👍 Release has not changed. Doing nothing."
          fi

      - name: 🔡 Remove 'n8n@' from release name to get the version
        id: n8n_version
        if: steps.compare_releases.outputs.release_changed == 'true'
        run: |
          version=$(echo "${{ steps.n8n_release.outputs.release }}" | sed 's/n8n@//g')
          echo "version=$version" >> $GITHUB_OUTPUT

      - name: 🐳 Execute Build Docker image and push to Docker Hub workflow
        if: steps.compare_releases.outputs.release_changed == 'true'
        uses: benc-uk/workflow-dispatch@v1.2.2
        with:
          workflow: build-and-push.yml
          inputs: '{ "n8n_version": "${{ steps.n8n_version.outputs.version }}"}'

      - name: 🏷️ Create GitHub Release
        uses: ncipollo/release-action@v1
        with:
          commit: main
          tag: '${{ steps.n8n_release.outputs.release }}'

